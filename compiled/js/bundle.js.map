{"version":3,"sources":["app.js","services/mainService.js","routes/home/homeCtrl.js"],"names":["angular","module","config","$stateProvider","$urlRouterProvider","state","url","templateUrl","controller","otherwise","service","$http","uploadFileToUrl","file","uploadUrl","fd","FormData","append","post","transformRequest","identity","headers","undefined","success","error","$scope","$state","$sce","$stateParams","mainService","$rootScope","folderFiles","Array","strArray","foundFile","found","totalFiles","document","getElementById","addEventListener","files","i","fr","FileReader","onload","push","content","result","name","readAsText","length","console","log","setPhrase","phrase","forEach","element","index","regPhrase","RegExp","regHighlight","search","trustAsHtml","replace","clear","userInput","reload"],"mappings":"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","file":"bundle.js","sourcesContent":["angular.module('app', ['ui.router'])\r\n\r\n.config(function($stateProvider, $urlRouterProvider) {\r\n  //default router\r\n  //home page and landing page\r\n  $stateProvider\r\n  .state('optionOne', {\r\n    url: '/',\r\n    templateUrl: './app/routes/home/homeTemp.html',\r\n    controller: 'optionOneCtrl'\r\n  });\r\n\r\n  $urlRouterProvider.otherwise('/');\r\n  \r\n});//closing\r\n","angular.module('app').service('mainService', function($http) {\r\n    this.uploadFileToUrl = function(file, uploadUrl) {\r\n        var fd = new FormData();\r\n        fd.append('file', file);\r\n\r\n        $http.post(uploadUrl, fd, {\r\n            transformRequest: angular.identity,\r\n            headers: {\r\n                'Content-Type': undefined\r\n            }\r\n        })\r\n\r\n        .success(function() {})\r\n\r\n        .error(function() {});\r\n    }\r\n}); //closing\r\n","angular.module('app').controller('optionOneCtrl', function($scope, $state, $sce, $stateParams, mainService, $rootScope) {\r\n        //Declaring variables or $scope properties/keys\r\n        let folderFiles = new Array;\r\n        let strArray = new Array;\r\n        $scope.foundFile = new Array;\r\n        $scope.found = false;\r\n        $scope.totalFiles = 0;\r\n        // vanilla javascript to grab the folder with 100 files in it\r\n        // create input box that takes in folder\r\n        // eventlistener for when the files have been uploaded\r\n        document.getElementById(\"openFile\").addEventListener('change', function() {\r\n            // Set values to correct values\r\n            folderFiles = this.files;\r\n            // for loop and store content on file\r\n            for (let i = 0; i < folderFiles.length; i++) {\r\n              var fr = new FileReader();\r\n                fr.onload = function() {\r\n                        strArray.push({\r\n                            content: this.result,\r\n                            name: folderFiles[i].name\r\n                        });\r\n                    }\r\n                    //this allows for filereader to extract content of file as a string,\r\n                    //the result of readAsText is a string\r\n                    //passed var i as an argument so I would have the value of i in the onload fn\r\n                fr.readAsText(folderFiles[i], i);\r\n            }\r\n            console.log(\"before\",fr);\r\n        }); //end of upload\r\n\r\n        //set phrase from user function, takes in a string and matches any files that\r\n        //have that string\r\n        $scope.setPhrase = (phrase) => {\r\n            //questions to ask Bruno\r\n            //is the phrase case sensitive\r\n            //return the file name ? or display the file that has the phrase\r\n            //if no input set phrase to \"Find me\"\r\n            $scope.totalFiles = strArray.length;\r\n            if (!phrase) {\r\n                phrase = 'Find me'\r\n            }\r\n            console.log(strArray);\r\n            strArray.forEach(function(element, index) {\r\n                var regPhrase = new RegExp(phrase);\r\n                var regHighlight = new RegExp(phrase, \"g\");\r\n                if (element.content.search(regPhrase) != -1) {\r\n                    //allows searched word to be highlighted\r\n                    // element.content = $sce.trustAsHtml(element.content.replace(regHighlight, `<span>${phrase}</span>`));\r\n                      element.content = $sce.trustAsHtml(element.content.replace(regHighlight, `<span>${phrase}</span>`));\r\n                    $scope.foundFile.push(element);\r\n                    $scope.found = true;\r\n                }\r\n            });\r\n        };\r\n        //clear function, sets everything to zero\r\n        $scope.clear = function(){\r\n          folderFiles = [];\r\n          strArray = [];\r\n          $scope.foundFile = [];\r\n          $scope.found = false;\r\n          $scope.totalFiles = 0;\r\n          $scope.userInput = \"\";\r\n          $state.reload();\r\n        };\r\n  }); //closing\r\n"]}